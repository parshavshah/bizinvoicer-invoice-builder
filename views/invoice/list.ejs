<%- include('../partials/header'); %>

<div class="content-wrapper">
  <div class="content-header">
    <div class="container-fluid">
      <div class="row mb-2">
        <div class="col-sm-6">
          <h1 class="m-0">Invoices</h1>
        </div>
        <div class="col-sm-6">
          <ol class="breadcrumb float-sm-right">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item active">Invoices</li>
          </ol>
        </div>
      </div>
    </div>
  </div>

  <div class="content">
    <div class="container-fluid">
      <div class="row">
        <div class="col-12">
          <div class="card">
            <div class="card-header">
              <h3 class="card-title mt-1">Invoice List</h3>
              <div class="card-tools">
                <% if(permissions[`${user.role}_INVOICE_CREATE`]){ %>
                <a href="/invoice/create" class="btn btn-primary btn-sm">
                  <i class="fas fa-plus"></i> New Invoice
                </a>
                <% } %>
              </div>
            </div>
            <div class="card-body">
              <table id="invoiceTable" class="table table-bordered table-striped">
                <thead>
                  <tr>
                    <th>Invoice #</th>
                    <th>Firm</th>
                    <th>Client</th>
                    <th>Issue Date</th>
                    <th>Due Date</th>
                    <th>Total</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody></tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- model with invoice status -->
<!-- Change Status Modal -->
<div class="modal fade" id="changeStatusModal" tabindex="-1" role="dialog" aria-labelledby="changeStatusModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="changeStatusModalLabel">Change Invoice Status</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="changeStatusForm">
          <input type="hidden" id="invoiceId" name="invoiceId">
          <div class="form-group">
            <label for="invoiceStatus">Status</label>
            <select class="form-control" id="invoiceStatus" name="status">
              <option value="draft">Draft</option>
              <option value="sent">Sent</option>
              <option value="paid">Paid</option>
              <option value="cancelled">Cancelled</option>
              <option value="overdue">Overdue</option>
            </select>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="saveStatusBtn">Save Changes</button>
      </div>
    </div>
  </div>
</div>

<!-- Add Payment Modal -->
<div class="modal fade" id="addPaymentModal" tabindex="-1" role="dialog" aria-labelledby="addPaymentModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addPaymentModalLabel">Add Payment</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        <form id="addPaymentForm">
          <input type="hidden" id="paymentInvoiceId" name="invoiceId">
          <div class="form-group">
            <label for="paymentMethodId">Payment Method</label>
            <select class="form-control" id="paymentMethodId" name="paymentMethodId" required>
              <!-- Will be populated dynamically -->
            </select>
          </div>
          <div class="form-group">
            <label for="amount">Amount</label>
            <input type="number" class="form-control" id="amount" name="amount" step="0.01" required>
          </div>
          <div class="form-group">
            <label for="paymentDate">Payment Date</label>
            <input type="date" class="form-control" id="paymentDate" name="paymentDate" required>
          </div>
          <div class="form-group">
            <label for="referenceNumber">Reference Number</label>
            <input type="text" class="form-control" id="referenceNumber" name="referenceNumber">
          </div>
          <div class="form-group">
            <label for="transactionId">Transaction ID</label>
            <input type="text" class="form-control" id="transactionId" name="transactionId">
          </div>
          <div class="form-group">
            <label for="notes">Notes</label>
            <textarea class="form-control" id="notes" name="notes" rows="3"></textarea>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="savePaymentBtn">Save Payment</button>
      </div>
    </div>
  </div>
</div>

<script>
  // Handle status change form submission
  $("#saveStatusBtn").click(function() {
    const invoiceId = $("#invoiceId").val();
    const status = $("#invoiceStatus").val();

    $.ajax({
      url: `/api/invoices/${invoiceId}/status`,
      method: "PATCH",
      data: {
        status: status
      },
      success: function(response) {
        // Close modal
        $("#changeStatusModal").modal("hide");

        // Refresh table to show updated status
        $("#invoiceTable").DataTable().ajax.reload();

        // Show success message
        Swal.fire({
          title: "Success!",
          text: "Invoice status updated successfully",
          icon: "success",
        }).then(() => {
          location.reload();
        });
      },
      error: function(xhr, status, error) {
        Swal.fire({
          title: "Error!",
          text: "Error updating invoice status: " + error,
          icon: "error",
        });
      }
    });
  });

  $(document).on('click', ".statusButton", function(e) {
    e.preventDefault();
    console.log($(this).data('id'))
    $("#invoiceId").val($(this).data('id'))
    $("#changeStatusModal").modal("show");
  })

  $(document).ready(function() {
    // Initialize DataTable
    const table = $("#invoiceTable").DataTable({
      processing: true,
      serverSide: false,
      ajax: {
        url: "/api/invoices",
        dataSrc: "",
      },
      columns: [{
          data: "invoiceNumber"
        },
        {
          data: "Firm",
          render: function(data) {
            return data ? data.name : "N/A";
          },
        },
        {
          data: "Client",
          render: function(data) {
            return data ? data.name : "N/A";
          },
        },
        {
          data: "issueDate",
          render: function(data) {
            return formatDate(data);
          },
        },
        {
          data: "dueDate",
          render: function(data) {
            return formatDate(data);
          },
        },
        {
          data: "total",
          render: function(data, type, row) {
            return `<%= CURRENCY[currency][2] %> ${formatNumberFn(parseFloat(data),"<%= numberFormat %>")}`;
          },
        },
        {
          data: "status",
          render: function(data, type, row) {
            const statusClasses = {
              draft: "badge badge-secondary",
              sent: "badge badge-info",
              paid: "badge badge-success",
              overdue: "badge badge-danger",
              cancelled: "badge badge-warning",
            };
            return `<span data-id="${row.id}" class="statusButton ${statusClasses[data]}">${
              data.charAt(0).toUpperCase() + data.slice(1)
            }</span>`;
          },
        },
        {
          data: "id",
          render: function(data) {
            return `
            <div class="btn-group">
              <% if(permissions[`${user.role}_INVOICE_VIEW_SINGLE`]){ %>
              <a href="/invoice/view/${data}" class="btn btn-info btn-sm">
                <i class="fas fa-eye"></i>
              </a>
              <% } %>
              <% if(permissions[`${user.role}_INVOICE_UPDATE`]){ %>
              <a href="/invoice/update/${data}" class="btn btn-primary btn-sm">
                <i class="fas fa-edit"></i>
              </a>
              <% } %>
              <% if(permissions[`${user.role}_INVOICE_DELETE`]){ %>
              <button type="button" class="btn btn-danger btn-sm" onclick="deleteInvoice(${data})">
                <i class="fas fa-trash"></i>
              </button>
              <% } %>
              <% if(permissions[`${user.role}_PAYMENT_CREATE`]){ %>
              <button type="button" class="btn btn-success btn-sm" onclick="openPaymentModal(${data})">
                <i class="fas fa-money-bill"></i>
              </button>
              <% } %>
            </div>
          `;
          },
        },
      ],
      order: [
        [2, "desc"]
      ], // Sort by issue date by default
      pageLength: 10,
      language: {
        search: "Search invoices:",
      },
    });
  });

  // Delete invoice function
  function deleteInvoice(id) {
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#3085d6",
      cancelButtonColor: "#d33",
      confirmButtonText: "Yes, delete it!"
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: `/api/invoices/${id}`,
          method: "DELETE",
          success: function(response) {
            $("#invoiceTable").DataTable().ajax.reload();
          },
          error: function(xhr, status, error) {
            if(xhr.responseJSON.message){
              error = xhr.responseJSON.message;
            }
            Swal.fire({
              title: "Error!",
              text: "Error deleting invoice: " + error,
              icon: "error",
            });
          },
        });
      }
    });
  }

  // Function to open payment modal
  function openPaymentModal(invoiceId) {
    $("#paymentInvoiceId").val(invoiceId);
    // Load payment methods
    $.get("/api/payment-methods", function(methods) {
      const select = $("#paymentMethodId");
      select.empty();
      methods.forEach(method => {
        select.append(`<option value="${method.id}">${method.name}</option>`);
      });
    });
    $("#addPaymentModal").modal("show");
  }

  // Handle payment form submission
  $("#savePaymentBtn").click(function() {
    const formData = {
      invoiceId: $("#paymentInvoiceId").val(),
      paymentMethodId: $("#paymentMethodId").val(),
      amount: $("#amount").val(),
      paymentDate: $("#paymentDate").val(),
      referenceNumber: $("#referenceNumber").val(),
      transactionId: $("#transactionId").val(),
      notes: $("#notes").val()
    };

    $.ajax({
      url: `/api/invoices/${formData.invoiceId}/payments`,
      method: "POST",
      data: formData,
      success: function(response) {
        $("#addPaymentModal").modal("hide");
        $("#invoiceTable").DataTable().ajax.reload();
        Swal.fire({
          title: "Success!",
          text: "Payment added successfully",
          icon: "success"
        });
      },
      error: function(xhr, status, error) {
        Swal.fire({
          title: "Error!",
          text: "Error adding payment: " + (xhr.responseJSON?.message || error),
          icon: "error"
        });
      }
    });
  });
</script>

<%- include('../partials/footer'); %>