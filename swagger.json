{
  "openapi": "3.0.0",
  "info": {
    "title": "Invoice Builder API",
    "version": "1.0.0",
    "description": "API documentation for the Invoice Builder application"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "sessionAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "sessionAuth": []
    }
  ],
  "paths": {
    "/api/users/register": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "firstName", "lastName"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 6
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/login": {
      "post": {
        "tags": ["Users"],
        "summary": "Login user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful"
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/logout": {
      "post": {
        "tags": ["Users"],
        "summary": "Logout user",
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/api/firms": {
      "post": {
        "tags": ["Firms"],
        "summary": "Create a new firm",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "website": {
                    "type": "string",
                    "format": "uri"
                  },
                  "taxNumber": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "defaultCurrency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Firm created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Firms"],
        "summary": "Get all firms",
        "responses": {
          "200": {
            "description": "List of firms"
          }
        }
      }
    },
    "/api/firms/{id}": {
      "put": {
        "tags": ["Firms"],
        "summary": "Update a firm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "website": {
                    "type": "string",
                    "format": "uri"
                  },
                  "taxNumber": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "defaultCurrency": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 3
                  },
                  "logo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Firm updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Firms"],
        "summary": "Delete a firm",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Firm deleted successfully"
          }
        }
      }
    },
    "/api/clients": {
      "post": {
        "tags": ["Clients"],
        "summary": "Create a new client",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "contactPerson": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "postalCode": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "taxNumber": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Client created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Clients"],
        "summary": "Get all clients",
        "responses": {
          "200": {
            "description": "List of clients"
          }
        }
      }
    },
    "/api/clients/{id}": {
      "put": {
        "tags": ["Clients"],
        "summary": "Update a client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "contactPerson": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "city": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "state": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "postalCode": {
                    "type": "string",
                    "maxLength": 20
                  },
                  "country": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "taxNumber": {
                    "type": "string",
                    "maxLength": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Client updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Clients"],
        "summary": "Delete a client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Client deleted successfully"
          }
        }
      }
    },
    "/api/products": {
      "post": {
        "tags": ["Products"],
        "summary": "Create a new product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "unit": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "regularPrice": {
                    "type": "number",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Products"],
        "summary": "Get all products",
        "responses": {
          "200": {
            "description": "List of products"
          }
        }
      }
    },
    "/api/products/{id}": {
      "put": {
        "tags": ["Products"],
        "summary": "Update a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "unit": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "regularPrice": {
                    "type": "number",
                    "minimum": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Product updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Products"],
        "summary": "Delete a product",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product deleted successfully"
          }
        }
      }
    },
    "/api/taxes": {
      "post": {
        "tags": ["Taxes"],
        "summary": "Create a new tax",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "rate"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tax created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Taxes"],
        "summary": "Get all taxes",
        "responses": {
          "200": {
            "description": "List of taxes"
          }
        }
      }
    },
    "/api/taxes/{id}": {
      "put": {
        "tags": ["Taxes"],
        "summary": "Update a tax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "rate"],
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "rate": {
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tax updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Taxes"],
        "summary": "Delete a tax",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tax deleted successfully"
          }
        }
      }
    },
    "/api/invoices": {
      "post": {
        "tags": ["Invoices"],
        "summary": "Create a new invoice",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["clientId", "firmId", "invoiceNumber", "issueDate", "dueDate", "currency", "items"],
                "properties": {
                  "clientId": {
                    "type": "integer"
                  },
                  "firmId": {
                    "type": "integer"
                  },
                  "invoiceNumber": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "reference": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "issueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["description", "quantity", "unitPrice"],
                      "properties": {
                        "productId": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unitPrice": {
                          "type": "number",
                          "minimum": 0
                        },
                        "discountPercent": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": ["taxId", "taxName", "taxRate"],
                            "properties": {
                              "taxId": {
                                "type": "integer"
                              },
                              "taxName": {
                                "type": "string",
                                "maxLength": 100
                              },
                              "taxRate": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invoice created successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Invoices"],
        "summary": "Get all invoices",
        "responses": {
          "200": {
            "description": "List of invoices"
          }
        }
      }
    },
    "/api/invoices/{id}": {
      "put": {
        "tags": ["Invoices"],
        "summary": "Update an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["clientId", "firmId", "invoiceNumber", "issueDate", "dueDate", "currency", "items"],
                "properties": {
                  "clientId": {
                    "type": "integer"
                  },
                  "firmId": {
                    "type": "integer"
                  },
                  "invoiceNumber": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "reference": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "issueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "maxLength": 10
                  },
                  "items": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": ["description", "quantity", "unitPrice"],
                      "properties": {
                        "productId": {
                          "type": "integer"
                        },
                        "description": {
                          "type": "string"
                        },
                        "quantity": {
                          "type": "number",
                          "minimum": 0
                        },
                        "unitPrice": {
                          "type": "number",
                          "minimum": 0
                        },
                        "discountPercent": {
                          "type": "number",
                          "minimum": 0,
                          "maximum": 100
                        },
                        "taxes": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": ["taxId", "taxName", "taxRate"],
                            "properties": {
                              "taxId": {
                                "type": "integer"
                              },
                              "taxName": {
                                "type": "string",
                                "maxLength": 100
                              },
                              "taxRate": {
                                "type": "number",
                                "minimum": 0,
                                "maximum": 100
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invoice updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      },
      "delete": {
        "tags": ["Invoices"],
        "summary": "Delete an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invoice deleted successfully"
          }
        }
      }
    },
    "/api/invoices/{id}/status": {
      "patch": {
        "tags": ["Invoices"],
        "summary": "Update invoice status",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": ["draft", "sent", "paid", "overdue", "cancelled"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invoice status updated successfully"
          },
          "400": {
            "description": "Invalid input"
          }
        }
      }
    }
  }
} 